{"ast":null,"code":"var _jsxFileName = \"/Users/banu_nallamothu/react-labs/src/FruitsLab11.js\";\n// Importing React and Component to create a class component\nimport React, { Component } from 'react';\n// Importing Bootstrap CSS to apply styling\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Functional component to display the list of fruits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FruitList(props) {\n  return (\n    /*#__PURE__*/\n    // Using Bootstrap class list-group to style the list\n    _jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children:\n      // Looping through each fruit in the array using map function\n      props.fruits.map((fruit, index) =>\n      /*#__PURE__*/\n      // Each list item has a key and a Bootstrap class\n      _jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [fruit, \"  \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// Class component named FruitsLab11 to manage the fruit list\n_c = FruitList;\nclass FruitsLab11 extends Component {\n  constructor(props) {\n    super(props); // Calling the parent class constructor\n\n    // Defining state to store fruits array and newFruit input value\n    // Function to handle input box changes\n    this.handleChange = event => {\n      // Update the state with new input value\n      this.setState({\n        newFruit: event.target.value\n      });\n    };\n    // Function to add new fruit to the fruits array\n    this.addFruit = () => {\n      // Check if input is not an empty string\n      if (this.state.newFruit.trim() !== '') {\n        // Updating the fruits array by adding the newFruit\n        this.setState({\n          fruits: [...this.state.fruits, this.state.newFruit],\n          // add new fruit\n          newFruit: '' // clear the input box\n        });\n      }\n    };\n    this.state = {\n      fruits: ['Apple', 'Banana', 'Orange'],\n      // initial fruits list\n      newFruit: '' // empty string for input box\n    };\n  }\n  // The render method displays the UI elements\n  render() {\n    return (\n      /*#__PURE__*/\n      // Using Bootstrap container class to center the content\n      _jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lab 11 - Fruits Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter a fruit name\",\n            value: this.state.newFruit // input value from state\n            ,\n            onChange: this.handleChange // calling handleChange on typing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: this.addFruit,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FruitList, {\n          fruits: this.state.fruits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}\n\n// Exporting the component so it can be used in App.js\nexport default FruitsLab11;\nvar _c;\n$RefreshReg$(_c, \"FruitList\");","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","FruitList","props","className","children","fruits","map","fruit","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","FruitsLab11","constructor","handleChange","event","setState","newFruit","target","value","addFruit","state","trim","render","type","placeholder","onChange","onClick","$RefreshReg$"],"sources":["/Users/banu_nallamothu/react-labs/src/FruitsLab11.js"],"sourcesContent":["// Importing React and Component to create a class component\nimport React, { Component } from 'react';\n// Importing Bootstrap CSS to apply styling\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Functional component to display the list of fruits\nfunction FruitList(props) {\n  return (\n    // Using Bootstrap class list-group to style the list\n    <ul className=\"list-group mt-3\">\n      {\n        // Looping through each fruit in the array using map function\n        props.fruits.map((fruit, index) => (\n          // Each list item has a key and a Bootstrap class\n          <li key={index} className=\"list-group-item\">\n            {fruit}  {/* Displaying the fruit name */}\n          </li>\n        ))\n      }\n    </ul>\n  );\n}\n\n// Class component named FruitsLab11 to manage the fruit list\nclass FruitsLab11 extends Component {\n  constructor(props) {\n    super(props); // Calling the parent class constructor\n\n    // Defining state to store fruits array and newFruit input value\n    this.state = {\n      fruits: ['Apple', 'Banana', 'Orange'], // initial fruits list\n      newFruit: '' // empty string for input box\n    };\n  }\n\n  // Function to handle input box changes\n  handleChange = (event) => {\n    // Update the state with new input value\n    this.setState({ newFruit: event.target.value });\n  }\n\n  // Function to add new fruit to the fruits array\n  addFruit = () => {\n    // Check if input is not an empty string\n    if (this.state.newFruit.trim() !== '') {\n      // Updating the fruits array by adding the newFruit\n      this.setState({\n        fruits: [...this.state.fruits, this.state.newFruit], // add new fruit\n        newFruit: '' // clear the input box\n      });\n    }\n  }\n\n  // The render method displays the UI elements\n  render() {\n    return (\n      // Using Bootstrap container class to center the content\n      <div className=\"container mt-4\">\n        {/* Title of Lab 11 */}\n        <h3>Lab 11 - Fruits Component</h3>\n\n        {/* Input and button in one line using Bootstrap input-group */}\n        <div className=\"input-group mb-3\">\n          {/* Text input to enter new fruit name */}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter a fruit name\"\n            value={this.state.newFruit} // input value from state\n            onChange={this.handleChange} // calling handleChange on typing\n          />\n          {/* Button to add fruit */}\n          <button className=\"btn btn-primary\" onClick={this.addFruit}>\n            Add\n          </button>\n        </div>\n\n        {/* Passing fruits array to FruitList functional component */}\n        <FruitList fruits={this.state.fruits} />\n      </div>\n    );\n  }\n}\n\n// Exporting the component so it can be used in App.js\nexport default FruitsLab11;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}